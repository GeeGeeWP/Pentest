# Importing the correct modules
import os
import sys
from colorama import Fore, Back, Style

# Get Target Name and Target IP
ip = (sys.argv[1])
target = (sys.argv[2])

# Make the proper directories and files
os.system("mkdir -p ~/HTB/%s/nmap" % target)
print(Fore.RED + '*' * 50 + Style.RESET_ALL)

# Start nmap scan
# Come bak to this and optimize!
os.system("nmap %s -p- -oN output" % ip)
os.system("cat output | grep open > deleteme")
os.system("sed -i 's/open//g' deleteme")
os.system("sed -i 's/tcp//g' deleteme")
os.system("cat deleteme | tr -d '/' | tr -s ' ' > output")
os.system("rm deleteme")
os.system("nmap %s -p- -sC -sV -oN %s" % (ip, target))
print(Fore.RED + '*' * 50 + Style.RESET_ALL)
os.system("mv %s ~/HTB/%s/nmap/" % (target, target))

# Testing what ports are open
with open('output') as http:
    if 'http' in http.read():
        os.system("cat output | grep http | cut -d ' ' -f1 > tar_http")
        file = open("tar_http")
        port = file.read()
        os.system("python http.py %s %s %s" % (ip, target, port))
        os.system("rm tar_http")

with open('output') as ftp:
    if 'ftp' in ftp.read():
        os.system("cat output | grep ftp | cut -d ' ' -f1 > tar_ftp")
        file = open("tar_ftp")
        port = file.read()
        os.system("python ftp.py %s %s %s" % (ip, target, port))
        os.system("rm tar_ftp")

with open('output') as smbd:
    if 'smbd' in smbd.read():
        os.system("cat output | grep smbd | cut -d ' ' -f1 > tar_smbd")
        file = open("tar_smbd")
        port = file.read()
        os.system("python smbd.py %s %s %s" % (ip, target, port))
        os.system("rm tar_smbd")

with open('output') as netbios:
    if 'netbios' in netbios.read():
        os.system("cat output | grep netbios | cut -d ' ' -f1 > tar_netbios")
        file = open("tar_netbios")
        port = file.read()
        os.system("python SMB.py %s %s %s" % (ip, target, port))
        os.system("rm tar_netbios")

with open('output') as rpc:
    if 'rpc' in rpc.read():
        os.system("cat output | grep rpc | cut -d ' ' -f1 > tar_rpc")
        file = open("tar_rpc")
        port = file.read()
        os.system("python rpc.py %s %s %s" % (ip, target, port))
        os.system("rm tar_rpc")

with open('output') as vnc:
    if 'vnc' in vnc.read():
        os.system("python vnc.py %s %s %s" % (ip, target))
        os.system("rm vnc_rpc")

# os.system('rm output')
print("Scan Done!!")